package corba.server;


/**
* corbaserver/PayloadHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CorbaServer.idl
* Saturday, October 15, 2011 7:12:31 PM PDT
*/

abstract public class PayloadHelper
{
  private static String  _id = "IDL:corbaserver/Payload:1.0";

  public static void insert (org.omg.CORBA.Any a, corba.server.Payload that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static corba.server.Payload extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [5];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_array_tc (1000, _tcOf_members0 );
          _members0[0] = new org.omg.CORBA.StructMember (
            "arrayOne",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_array_tc (1000, _tcOf_members0 );
          _members0[1] = new org.omg.CORBA.StructMember (
            "arrayTwo",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_array_tc (1000, _tcOf_members0 );
          _members0[2] = new org.omg.CORBA.StructMember (
            "arrayThree",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_array_tc (1000, _tcOf_members0 );
          _members0[3] = new org.omg.CORBA.StructMember (
            "arrayFour",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_array_tc (1000, _tcOf_members0 );
          _members0[4] = new org.omg.CORBA.StructMember (
            "arrayFive",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (corba.server.PayloadHelper.id (), "Payload", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static corba.server.Payload read (org.omg.CORBA.portable.InputStream istream)
  {
    corba.server.Payload value = new corba.server.Payload ();
    value.arrayOne = new double[1000];
    for (int _o0 = 0;_o0 < (1000); ++_o0)
    {
      value.arrayOne[_o0] = istream.read_double ();
    }
    value.arrayTwo = new double[1000];
    for (int _o1 = 0;_o1 < (1000); ++_o1)
    {
      value.arrayTwo[_o1] = istream.read_double ();
    }
    value.arrayThree = new double[1000];
    for (int _o2 = 0;_o2 < (1000); ++_o2)
    {
      value.arrayThree[_o2] = istream.read_double ();
    }
    value.arrayFour = new double[1000];
    for (int _o3 = 0;_o3 < (1000); ++_o3)
    {
      value.arrayFour[_o3] = istream.read_double ();
    }
    value.arrayFive = new double[1000];
    for (int _o4 = 0;_o4 < (1000); ++_o4)
    {
      value.arrayFive[_o4] = istream.read_double ();
    }
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, corba.server.Payload value)
  {
    if (value.arrayOne.length != (1000))
      throw new org.omg.CORBA.MARSHAL (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    for (int _i0 = 0;_i0 < (1000); ++_i0)
    {
      ostream.write_double (value.arrayOne[_i0]);
    }
    if (value.arrayTwo.length != (1000))
      throw new org.omg.CORBA.MARSHAL (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    for (int _i1 = 0;_i1 < (1000); ++_i1)
    {
      ostream.write_double (value.arrayTwo[_i1]);
    }
    if (value.arrayThree.length != (1000))
      throw new org.omg.CORBA.MARSHAL (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    for (int _i2 = 0;_i2 < (1000); ++_i2)
    {
      ostream.write_double (value.arrayThree[_i2]);
    }
    if (value.arrayFour.length != (1000))
      throw new org.omg.CORBA.MARSHAL (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    for (int _i3 = 0;_i3 < (1000); ++_i3)
    {
      ostream.write_double (value.arrayFour[_i3]);
    }
    if (value.arrayFive.length != (1000))
      throw new org.omg.CORBA.MARSHAL (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    for (int _i4 = 0;_i4 < (1000); ++_i4)
    {
      ostream.write_double (value.arrayFive[_i4]);
    }
  }

}
